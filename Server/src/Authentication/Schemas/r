// import { Prop, Schema, SchemaFactory } from "@nestjs/mongoose";
// import { Document } from "mongoose"

// @Schema({
//   timestamps: true
// })


// export class User extends Document {
//   @Prop({
//     minlength: 4,
//     maxlength: 20,
//     trim: true,
//     required: [true, "name is required"],
//     type: String
//   })
//   username: string;

//   @Prop({
//     unique: [true, "Email address is already registered"],
//     required: [true, "Email is required"],
//   })
//   email: string;

//   @Prop({
//     select: false,
//     required: true
//   })
//   password: string;


//   // @Prop({
//   //   exists: {
//   //     type: Boolean,
//   //     default: false
//   //   },
//   //   imageLink: {
//   //     type: String,
//   //     trim: true,
//   //     default: null
//   //   },
//   //   imageId: {
//   //     type: String,
//   //     trim: true,
//   //     default: null
//   //   }
//   // })
//   // avatar: {
//   //   exists: boolean,
//   //   imageLink: string,
//   //   imageId: string
//   // }


//   // @Prop({
//   //   postKarma: {
//   //     type: Number,
//   //     default: 0
//   //   },
//   //   commentKarma: {
//   //     type: Number,
//   //     default: 0
//   //   }
//   // })
//   // karmaPoints: {
//   //   postKarma: number
//   //   commentKarma: number
//   // }

//   // @Prop([{ type: Schema.Types.ObjectId, ref: 'Post' }])
//   // posts: any[];

//   // @Prop([{ type: Schema.Types.ObjectId, ref: 'Subreddit' }])
//   // subscribedSubs: any[];
//   @Prop({ default: 0 })
//   totalComments: number

// }

// export const userSchema = SchemaFactory.createForClass(User)